import React, { useState } from "react";
import { Search } from "lucide-react";
import { useStore } from "../utils/store";
import brain from "brain";
import { toast } from "sonner";

export function SearchInterface() {
  const [query, setQuery] = useState("");
  const { setLoading, isLoading } = useStore();
  const [searchResults, setLocalSearchResults] = useState<Array<{ id: string; filename: string; content: string }>>([]);

  const handleSearch = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!query.trim()) return;

    setLoading(true);

    try {
      const response = await brain.search_documents({ query });
      const data = await response.json();
      setLocalSearchResults(data.results);
    } catch (error) {
      toast.error("Failed to search documents");
      setLocalSearchResults([]);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="space-y-6">
      <form onSubmit={handleSearch} className="w-full max-w-2xl mx-auto">
        <div className="relative">
          <input
            type="text"
            value={query}
            onChange={(e) => setQuery(e.target.value)}
            placeholder="Search through your documents..."
            className="w-full px-4 py-3 pl-12 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            disabled={isLoading}
          />
          <Search className="absolute left-4 top-3.5 w-5 h-5 text-gray-400" />
        </div>
      </form>

      {/* Search Results */}
      {searchResults.length > 0 && (
        <div className="mt-8">
          <h2 className="text-lg font-semibold mb-4">Search Results</h2>
          <div className="space-y-4">
            {searchResults.map((result) => (
              <div
                key={result.id}
                className="p-4 bg-white border rounded-lg shadow-sm"
              >
                <h3 className="font-medium text-gray-900 mb-2">{result.filename}</h3>
                <p className="text-gray-700 line-clamp-3">{result.content}</p>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
}
