import React from "react";
import { useStore } from "../utils/store";
import { X, Calendar, FileText, Loader2 } from "lucide-react";

export function DocumentViewer() {
  const { selectedDocument, setSelectedDocument, isLoading } = useStore();

  if (!selectedDocument) return null;

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString(undefined, {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div 
        className="bg-white rounded-lg w-full max-w-4xl max-h-[90vh] flex flex-col shadow-xl"
        onClick={(e) => e.stopPropagation()}
      >
        {/* Header */}
        <div className="flex items-center justify-between p-4 border-b bg-gray-50 rounded-t-lg">
          <div className="flex items-center gap-3">
            <FileText className="w-5 h-5 text-gray-500" />
            <h3 className="text-lg font-semibold text-gray-900">{selectedDocument.filename}</h3>
          </div>
          <button
            onClick={() => setSelectedDocument(null)}
            className="p-2 hover:bg-gray-200 rounded-full transition-colors"
            title="Close"
          >
            <X className="w-5 h-5 text-gray-500" />
          </button>
        </div>

        {/* Metadata */}
        <div className="px-6 py-3 border-b bg-gray-50">
          <div className="flex items-center gap-2 text-sm text-gray-600">
            <Calendar className="w-4 h-4" />
            <span>Uploaded on {formatDate(selectedDocument.upload_date)}</span>
          </div>
        </div>

        {/* Content */}
        <div className="flex-1 overflow-auto p-6">
          {isLoading ? (
            <div className="flex items-center justify-center h-full">
              <Loader2 className="w-8 h-8 text-blue-500 animate-spin" />
            </div>
          ) : (
            <div className="prose max-w-none">
              {selectedDocument.content.split('\n').map((paragraph, index) => {
                if (!paragraph.trim()) return null;
                return (
                  <p 
                    key={index} 
                    className="mb-4 text-gray-700 leading-relaxed"
                  >
                    {paragraph}
                  </p>
                );
              })}
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
